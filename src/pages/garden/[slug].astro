---
export const prerender = true;

import type { GetStaticPathsResult } from "astro";
import BlogPost from "~/layouts/BlogPost.astro";
import { type CollectionEntry, getCollection } from "astro:content";

export interface Props {
  post: CollectionEntry<"garden">;
}

export const getStaticPaths = async (): Promise<GetStaticPathsResult> => {
  return (await getCollection("garden"))
    .filter((p) => import.meta.env.DEV || !p.data.draft)
    .map((post) => {
      return {
        params: {
          slug: post.slug,
        },
        props: { post },
      };
    });
};

const {
  post: {
    data: { title, description, tags, pubDate, modDate },
    render,
  },
} = Astro.props;
const layout = false;
const rendered = await render();
const Content = rendered.Content;
const info = {
  title,
  tags,
  description: description || "",
  pubDate: pubDate,
  modDate: modDate,
};
---

{
  // If the markdown file has a `layout` attribute then we should just render
  // it. If it does not then we need to build the layout around the content
  // ourselves.
  layout ? (
    <Content />
  ) : (
    <BlogPost content={info}>
      <Content />
    </BlogPost>
  )
}
