---
export const prerender = true;

import type { MarkdownInstance, GetStaticPathsResult } from "astro";
import { type Frontmatter, getPosts, slug } from "~/lib/blog";
import GithubSlugger from "github-slugger";
import BlogPost from "~/layouts/BlogPost.astro";

export interface Props {
  post: MarkdownInstance<Frontmatter>;
}

export const getStaticPaths = async (): Promise<GetStaticPathsResult> => {
  const slugger = new GithubSlugger();
  const posts = await getPosts({ blog: false });
  return posts.map((post) => {
    return {
      params: {
        slug: slug(post, true, slugger),
      },
      props: { post },
    };
  });
};

const {
  post: {
    Content,
    frontmatter: { layout, title, description, pubDate, tags },
  },
} = Astro.props;
const content = {
  title,
  description,
  tags,
  pubDate: new Date(pubDate),
};
---

{
  // If the markdown file has a `layout` attribute then we should just render
  // it. If it does not then we need to build the layout around the content
  // ourselves.
  layout ? (
    <Content />
  ) : (
    <BlogPost content={content}>
      <Content />
    </BlogPost>
  )
}
