---
export interface Props {
  title: string;
  id?: string;
  className?: string;
}
const { title, id, className } = Astro.props;
---

<win95-window class={`win95-window ${className || ""}`} id={id}>
  <header class="win95-window-head">
    <p>{title}</p>
    <button class="win95-close">&#x2715;</button>
    <button class="win95-minimize">&#95;</button>
  </header>
  <section class="win95-window-body">
    <slot></slot>
  </section>
</win95-window>

<script>
  class Win95 extends HTMLElement {
    constructor() {
      super();
      let buttons = this.querySelectorAll("button");
      let close = buttons[0];
      let min = buttons[1];
      close.addEventListener("click", (e: MouseEvent) => {console.log("close", this)});
      min.addEventListener("click", (e: MouseEvent) => {console.log("minimize", this)});
    }
  }
  customElements.define("win95-window", Win95);
</script>

<style>
  win95-window {
    background-color: #c0c0c0;
    border-width: 0.15em;
    border-color: #d8d8d8 #7a7a7a #7a7a7a #d8d8d8;
    border-style: solid;
    /* position: relative; */
    position: fixed;
    color: black;
  }

  header {
    /* top: 0px; */
    /* position: absolute; */
    background-color: #000080;
    padding-left: 5px;
    width: calc(100% - 5px); /* Subtract the padding size */
    height: 18px;
    margin: 0px;
  }

  header :global(p) {
    color: white;
    float: left;
    margin: 0;
    display: block;
    font-size: 0.7em;
  }

  header button {
    float: right;
    text-align: center;
    border-color: #d8d8d8 #7a7a7a #7a7a7a #d8d8d8;
    margin-top: 2px;
    margin-right: 2px;
    margin-bottom: 2px;
    margin-left: 0px;
    padding: 0;
    width: 14px;
    height: 14px;
    border-width: 1px;
    font-size: 0.5em;
    font-weight: bold;
  }
</style>

